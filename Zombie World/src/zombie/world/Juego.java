package zombie.world;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import static zombie.world.Informacion.getConecction;
import static zombie.world.Registros.getConecction;

public class Juego extends javax.swing.JFrame {

    DefaultTableModel modelo = new DefaultTableModel();

    /*hacer el cursos diferente*/
    Cursor cursor;
    ImageIcon img = new ImageIcon(getClass().getResource("/imagenes/EspadaImperial.png"));
    Toolkit TK = Toolkit.getDefaultToolkit();

    //conexion a mysql
    public static final String URL = "jdbc:mysql://localhost:3306/zombieworld?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
    public static final String USERNAME = "root";
    public static final String PASSWORD = "root";
    PreparedStatement PS;

    int cont = 0;

    public Juego() {

        //Cambiar icono
        this.setIconImage(new ImageIcon(getClass().getResource("/imagenes/mano.png")).getImage());

        initComponents();
        this.setLocationRelativeTo(null);
        ImageIcon imagen = new ImageIcon(getClass().getResource("/imagenes/Bosque.jpg"));
        Icon Fondo = new ImageIcon(imagen.getImage().getScaledInstance(this.Fondo.getWidth(), this.Fondo.getHeight(), Image.SCALE_DEFAULT));
        this.Fondo.setIcon(Fondo);
        this.repaint();

        setExtendedState(MAXIMIZED_BOTH);

        /*parte del cursor diferente*/
        this.cursor = TK.createCustomCursor(img.getImage(), new Point(1, 1), "Cursor");
        this.setCursor(cursor);

        this.repaint();
        UIManager.put("nimbusOrange", new Color(38, 139, 210));

        try {
            JT2.setModel(modelo);
            ResultSet rs = null;
            Connection con = getConecction();

            String sql = "SELECT * from Construcciones";

            PS = con.prepareStatement(sql);
            rs = PS.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumna = rsMd.getColumnCount();
            modelo.addColumn("Nombre_Vehiculo");
            modelo.addColumn("Descripcion");
            modelo.addColumn("Requisitos");

            while (rs.next()) {

                Object[] filas = new Object[cantidadColumna];
                for (int i = 0; i < cantidadColumna; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);

            }

        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        //DEFAULT DE PERSONAJES FALSOS Y CEROS
        TfP2.setText("1000");
        TfP3.setText("1001");
        TfP4.setText("1002");
        TF.setText("0");
        TF2.setText("0");
        TF3.setText("0");
        TF4.setText("0");
        TF5.setText("0");
        TF6.setText("0");
        TF7.setText("0");
        TF8.setText("0");
        TF9.setText("0");
        TF10.setText("0");
        TF11.setText("0");
        TF12.setText("0");

    }

    public static Connection getConecction() {
        Connection con = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection(URL, USERNAME, PASSWORD);

        } catch (Exception ex) {
            System.out.println(ex);
        }
        return con;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        Tesoros = new javax.swing.JButton();
        JBcombate = new javax.swing.JButton();
        Eventos = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jCheckBox15 = new javax.swing.JCheckBox();
        lbDias = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        TFdias = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        TFper = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        PBV1 = new javax.swing.JProgressBar();
        PBCor1 = new javax.swing.JProgressBar();
        PBC1 = new javax.swing.JProgressBar();
        PBV2 = new javax.swing.JProgressBar();
        PBCor2 = new javax.swing.JProgressBar();
        PBC2 = new javax.swing.JProgressBar();
        PBV3 = new javax.swing.JProgressBar();
        PBCor3 = new javax.swing.JProgressBar();
        PBC3 = new javax.swing.JProgressBar();
        PBV4 = new javax.swing.JProgressBar();
        PBCor4 = new javax.swing.JProgressBar();
        PBC4 = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TF4 = new javax.swing.JTextField();
        TF5 = new javax.swing.JTextField();
        TF6 = new javax.swing.JTextField();
        TF9 = new javax.swing.JTextField();
        TF7 = new javax.swing.JTextField();
        TF8 = new javax.swing.JTextField();
        TF3 = new javax.swing.JTextField();
        TF = new javax.swing.JTextField();
        TF2 = new javax.swing.JTextField();
        TF12 = new javax.swing.JTextField();
        TF10 = new javax.swing.JTextField();
        TF11 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PbC = new javax.swing.JProgressBar();
        PBCom = new javax.swing.JProgressBar();
        PbME = new javax.swing.JProgressBar();
        PbMU = new javax.swing.JProgressBar();
        PbA = new javax.swing.JProgressBar();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        Municion = new javax.swing.JTextField();
        Medicina = new javax.swing.JTextField();
        Combustible = new javax.swing.JTextField();
        Comida = new javax.swing.JTextField();
        Agua = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        lbl = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JT = new javax.swing.JTable();
        Muerte = new javax.swing.JLabel();
        Muerte1 = new javax.swing.JLabel();
        Muerte2 = new javax.swing.JLabel();
        Contador = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        JbG = new javax.swing.JButton();
        TfC = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        TfP4 = new javax.swing.JTextField();
        TfP3 = new javax.swing.JTextField();
        TfP2 = new javax.swing.JTextField();
        TfP1 = new javax.swing.JTextField();
        TfP21 = new javax.swing.JTextField();
        TfP22 = new javax.swing.JTextField();
        TfP23 = new javax.swing.JTextField();
        TfP24 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        JT2 = new javax.swing.JTable();
        Fondo = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tesoros.setText("Tesoros");
        Tesoros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TesorosActionPerformed(evt);
            }
        });
        getContentPane().add(Tesoros, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 300, -1, -1));

        JBcombate.setText("Combates");
        JBcombate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcombateActionPerformed(evt);
            }
        });
        getContentPane().add(JBcombate, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 380, -1, -1));

        Eventos.setText("Eventos");
        Eventos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventosActionPerformed(evt);
            }
        });
        getContentPane().add(Eventos, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 340, -1, -1));

        jButton1.setText("Inventarios");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 420, -1, -1));

        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Estacionamiento");
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        jCheckBox2.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Enfermeria");
        getContentPane().add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, -1, -1));

        jCheckBox3.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setText("Almacen");
        getContentPane().add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        jCheckBox4.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setText("Cocina");
        getContentPane().add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, -1, -1));

        jCheckBox5.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox5.setText("Estacionamiento 2");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, -1));

        jCheckBox6.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox6.setText("Taller 2");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, -1, -1));

        jCheckBox7.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox7.setText("Taller 1");
        getContentPane().add(jCheckBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, -1));

        jCheckBox8.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox8.setText("Biblioteca");
        getContentPane().add(jCheckBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, -1));

        jCheckBox9.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox9.setText("Bodega");
        getContentPane().add(jCheckBox9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        jCheckBox10.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox10.setText("Establo");
        getContentPane().add(jCheckBox10, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, -1, -1));

        jCheckBox11.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox11.setText("Taller de Armas");
        getContentPane().add(jCheckBox11, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, -1, -1));

        jCheckBox12.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox12.setText("Taller de Inventos");
        getContentPane().add(jCheckBox12, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, -1, -1));

        jCheckBox13.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox13.setText("Laboratorio");
        getContentPane().add(jCheckBox13, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, -1, -1));

        jCheckBox14.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox14.setText("Cultivos");
        getContentPane().add(jCheckBox14, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, -1, -1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Mansion");
        getContentPane().add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, -1, -1));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Colonia");
        getContentPane().add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, -1, -1));

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("Casa");
        getContentPane().add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, -1, -1));

        jCheckBox15.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox15.setText("Area de tiro");
        getContentPane().add(jCheckBox15, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, -1, -1));

        lbDias.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lbDias.setForeground(new java.awt.Color(0, 51, 204));
        lbDias.setText("0");
        getContentPane().add(lbDias, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 40, 100, 50));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Dia");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 50, 20));

        jButton11.setText("Avanzar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 40, -1, -1));
        getContentPane().add(TFdias, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 60, -1));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Numero de personas en la base");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 240, 20));
        getContentPane().add(TFper, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, 60, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Base.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, -1, -1));

        PBV1.setBackground(new java.awt.Color(0, 0, 0));
        PBV1.setValue(100);
        PBV1.setStringPainted(true);
        getContentPane().add(PBV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 40, -1, -1));

        PBCor1.setBackground(new java.awt.Color(255, 102, 51));
        PBCor1.setValue(100);
        PBCor1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PBCor1.setStringPainted(true);
        getContentPane().add(PBCor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 60, -1, -1));

        PBC1.setBackground(new java.awt.Color(255, 204, 204));
        PBC1.setValue(100);
        PBC1.setStringPainted(true);
        getContentPane().add(PBC1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 80, -1, -1));

        PBV2.setBackground(new java.awt.Color(51, 255, 0));
        PBV2.setValue(100);
        PBV2.setStringPainted(true);
        getContentPane().add(PBV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 150, -1, -1));

        PBCor2.setBackground(new java.awt.Color(255, 102, 51));
        PBCor2.setValue(100);
        PBCor2.setStringPainted(true);
        getContentPane().add(PBCor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 170, -1, -1));

        PBC2.setBackground(new java.awt.Color(255, 204, 204));
        PBC2.setValue(100);
        PBC2.setStringPainted(true);
        getContentPane().add(PBC2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 190, -1, -1));

        PBV3.setBackground(new java.awt.Color(51, 255, 0));
        PBV3.setValue(100);
        PBV3.setStringPainted(true);
        getContentPane().add(PBV3, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 250, -1, -1));

        PBCor3.setBackground(new java.awt.Color(255, 102, 51));
        PBCor3.setToolTipText("");
        PBCor3.setValue(100);
        PBCor3.setStringPainted(true);
        getContentPane().add(PBCor3, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 270, -1, -1));

        PBC3.setBackground(new java.awt.Color(255, 204, 204));
        PBC3.setValue(100);
        PBC3.setStringPainted(true);
        getContentPane().add(PBC3, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 290, -1, -1));

        PBV4.setBackground(new java.awt.Color(51, 255, 0));
        PBV4.setValue(100);
        PBV4.setStringPainted(true);
        getContentPane().add(PBV4, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 350, -1, -1));

        PBCor4.setBackground(new java.awt.Color(255, 102, 51));
        PBCor4.setToolTipText("");
        PBCor4.setValue(100);
        PBCor4.setStringPainted(true);
        getContentPane().add(PBCor4, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 370, -1, -1));

        PBC4.setBackground(new java.awt.Color(255, 204, 204));
        PBC4.setToolTipText("");
        PBC4.setValue(100);
        PBC4.setStringPainted(true);
        getContentPane().add(PBC4, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 390, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Personaje 1");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 10, 70, -1));

        jButton2.setText("Accion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 430, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Personaje 2");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 120, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Personaje 3");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 220, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Personaje 4");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 320, -1, -1));

        TF4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF4ActionPerformed(evt);
            }
        });
        TF4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF4KeyPressed(evt);
            }
        });
        getContentPane().add(TF4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 140, 60, -1));

        TF5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF5KeyPressed(evt);
            }
        });
        getContentPane().add(TF5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 170, 60, -1));

        TF6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF6KeyPressed(evt);
            }
        });
        getContentPane().add(TF6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 200, 60, -1));

        TF9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF9KeyPressed(evt);
            }
        });
        getContentPane().add(TF9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 300, 60, -1));

        TF7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF7ActionPerformed(evt);
            }
        });
        TF7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF7KeyPressed(evt);
            }
        });
        getContentPane().add(TF7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 240, 60, -1));

        TF8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF8KeyPressed(evt);
            }
        });
        getContentPane().add(TF8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 270, 60, -1));

        TF3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF3KeyPressed(evt);
            }
        });
        getContentPane().add(TF3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 90, 60, -1));

        TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFActionPerformed(evt);
            }
        });
        TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TFKeyPressed(evt);
            }
        });
        getContentPane().add(TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 30, 60, -1));

        TF2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF2KeyPressed(evt);
            }
        });
        getContentPane().add(TF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 60, 60, -1));

        TF12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF12KeyPressed(evt);
            }
        });
        getContentPane().add(TF12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 400, 60, -1));

        TF10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF10ActionPerformed(evt);
            }
        });
        TF10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF10KeyPressed(evt);
            }
        });
        getContentPane().add(TF10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 340, 60, -1));

        TF11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TF11KeyPressed(evt);
            }
        });
        getContentPane().add(TF11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 370, 60, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Barra 3 Confianza");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 300, -1, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Barra 2 Cordura");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 270, -1, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Barra 1 Vida");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 240, -1, -1));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Barra 3 Confianza");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 400, -1, -1));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Barra 2 Cordura");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 370, -1, -1));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Barra 1 Vida");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 340, -1, -1));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Barra 3 Confianza");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 90, -1, -1));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Barra 2 Cordura");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 60, -1, -1));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Barra 1 Vida");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 30, -1, -1));

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Barra 3 Confianza");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 200, -1, -1));

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Barra 2 Cordura");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 170, -1, -1));

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Barra 1 Vida");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 140, -1, -1));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 370, 80, -1));

        PbC.setForeground(new java.awt.Color(51, 255, 0));
        PbC.setMaximum(1000);
        PbC.setStringPainted(true);
        getContentPane().add(PbC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        PBCom.setForeground(new java.awt.Color(255, 51, 51));
        PBCom.setMaximum(1000);
        PBCom.setStringPainted(true);
        getContentPane().add(PBCom, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        PbME.setForeground(new java.awt.Color(255, 255, 255));
        PbME.setMaximum(1000);
        PbME.setStringPainted(true);
        getContentPane().add(PbME, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        PbMU.setForeground(new java.awt.Color(255, 255, 0));
        PbMU.setMaximum(1000);
        PbMU.setStringPainted(true);
        getContentPane().add(PbMU, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        PbA.setBackground(new java.awt.Color(255, 255, 255));
        PbA.setForeground(new java.awt.Color(102, 255, 204));
        PbA.setMaximum(1000);
        PbA.setBorderPainted(false);
        PbA.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PbA.setStringPainted(true);
        PbA.setVerifyInputWhenFocusTarget(false);
        getContentPane().add(PbA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 204, 0));
        jLabel19.setText("Comida");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("Combustible");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Medicina");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLabel22.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 0));
        jLabel22.setText("Municion");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        jLabel23.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 204, 255));
        jLabel23.setText("Agua");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        Municion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MunicionKeyPressed(evt);
            }
        });
        getContentPane().add(Municion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 60, -1));

        Medicina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MedicinaKeyPressed(evt);
            }
        });
        getContentPane().add(Medicina, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 60, -1));

        Combustible.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CombustibleKeyPressed(evt);
            }
        });
        getContentPane().add(Combustible, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 60, -1));

        Comida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ComidaKeyPressed(evt);
            }
        });
        getContentPane().add(Comida, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 60, -1));

        Agua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AguaActionPerformed(evt);
            }
        });
        Agua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AguaKeyPressed(evt);
            }
        });
        getContentPane().add(Agua, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 60, -1));

        jButton3.setText("Almacenar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, -1));

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Dados: ");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        jButton4.setText("2 (0,1)");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, -1, -1));

        jButton5.setText("2 (1,2)");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));

        jButton6.setText("30");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, -1, -1));

        jButton7.setText("100");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, -1, -1));

        jButton8.setText("4 (0,3)");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        jButton10.setText("8 (0,8)");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        lbl.setFont(new java.awt.Font("Yu Gothic Light", 3, 36)); // NOI18N
        lbl.setForeground(new java.awt.Color(204, 0, 0));
        getContentPane().add(lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 80, 80));

        jButton9.setText("5");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, -1, -1));

        jLabel25.setFont(new java.awt.Font("Perpetua", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Almacen de la base");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 464, 200, 20));

        JT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, "Taller 1"},
                {null, null, "1"},
                {null, null, "2"},
                {null, null, "3"},
                {null, null, "Taller 2"},
                {null, null, "1"},
                {null, null, "2"},
                {null, null, "Estacionamiento 2"},
                {null, null, "1"},
                {null, null, "2"},
                {null, null, "3"},
                {null, null, "4"},
                {null, null, "Estacionamiento 2"},
                {null, null, "1"},
                {null, null, "2"},
                {null, null, "3"},
                {null, null, "Enfermeria"},
                {null, null, "1"},
                {null, null, "2"},
                {null, null, "3"},
                {null, null, "Establo"},
                {null, null, "1"},
                {null, null, "2"},
                {null, null, "3"},
                {null, null, "4"},
                {null, null, "5"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Almacen", "Bodega", "espacios"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(JT);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, 400, 160));

        Muerte.setText("0");
        getContentPane().add(Muerte, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        Muerte1.setText("0");
        getContentPane().add(Muerte1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        Muerte2.setText("0");
        getContentPane().add(Muerte2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        Contador.setForeground(new java.awt.Color(0, 204, 0));
        getContentPane().add(Contador, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, 70, 30));

        jButton12.setText("Borrar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, -1, -1));

        JbG.setText("Guardar");
        JbG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbGActionPerformed(evt);
            }
        });
        getContentPane().add(JbG, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, -1, -1));
        getContentPane().add(TfC, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 460, 110, -1));

        jButton13.setText("Modificar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 460, -1, -1));
        getContentPane().add(TfP4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 320, 60, -1));
        getContentPane().add(TfP3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 220, 60, -1));
        getContentPane().add(TfP2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 60, -1));
        getContentPane().add(TfP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 10, 60, -1));
        getContentPane().add(TfP21, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 20, 60, -1));
        getContentPane().add(TfP22, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 130, 60, -1));
        getContentPane().add(TfP23, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 230, 60, -1));

        TfP24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TfP24ActionPerformed(evt);
            }
        });
        getContentPane().add(TfP24, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 330, 60, -1));

        jButton14.setText("Cargar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 460, -1, -1));

        jButton15.setText("50");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, -1, -1));

        JT2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane3.setViewportView(JT2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 500, 860, 160));
        getContentPane().add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1380, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int Vida[] = new int[4];
        int Cordura[] = new int[4];
        int Confianza[] = new int[4];
        int Valor[][] = new int[3][4];
        //SE DEBEN LLENAR TODOS LOS DATOS YA QUE EL TRY Y EL CATCH NO PERMITEN QUE SE QUEDE VACIO
        try {
            //VIDA
            if (TF.equals("")) {
                Vida[0] = 0;
            } else {
                Valor[0][0] = PBV1.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida[0] = Integer.parseInt(TF.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBV1.setValue(Valor[0][0] - Vida[0]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF4.equals("")) {
                Vida[1] = 0;
            } else {
                Valor[0][1] = PBV2.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida[1] = Integer.parseInt(TF4.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBV2.setValue(Valor[0][1] - Vida[1]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF7.equals("")) {
                Vida[2] = 0;
            } else {
                Valor[0][2] = PBV3.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida[2] = Integer.parseInt(TF7.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBV3.setValue(Valor[0][2] - Vida[2]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF10.equals("")) {
                Vida[3] = 0;
            } else {
                Valor[0][2] = PBV4.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida[3] = Integer.parseInt(TF10.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBV4.setValue(Valor[0][2] - Vida[3]); //SE ENVIA EL NUEVO VALOR 
            }

            //CORDURA
            if (TF2.equals("")) {
                Cordura[0] = 0;
            } else {
                Valor[1][0] = PBCor1.getValue(); //GUARDA EL VALOR DE LA BARRA
                Cordura[0] = Integer.parseInt(TF2.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBCor1.setValue(Valor[1][0] - Cordura[0]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF5.equals("")) {
                Cordura[1] = 0;
            } else {
                Valor[1][1] = PBCor2.getValue(); //GUARDA EL VALOR DE LA BARRA
                Cordura[1] = Integer.parseInt(TF5.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBCor2.setValue(Valor[1][1] - Cordura[1]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF8.equals("")) {
                Cordura[2] = 0;
            } else {
                Valor[1][2] = PBCor3.getValue(); //GUARDA EL VALOR DE LA BARRA
                Cordura[2] = Integer.parseInt(TF8.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBCor3.setValue(Valor[1][2] - Cordura[2]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF11.equals("")) {
                Cordura[3] = 0;
            } else {
                Valor[1][3] = PBCor4.getValue(); //GUARDA EL VALOR DE LA BARRA
                Cordura[3] = Integer.parseInt(TF11.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBCor4.setValue(Valor[1][3] - Cordura[3]); //SE ENVIA EL NUEVO VALOR 
            }

            //CONFIANZA
            if (TF3.equals("")) {
                Confianza[0] = 0;
            } else {
                Valor[2][0] = PBC1.getValue(); //GUARDA EL VALOR DE LA BARRA
                Confianza[0] = Integer.parseInt(TF3.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBC1.setValue(Valor[2][0] - Confianza[0]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF6.equals("")) {
                Confianza[1] = 0;
            } else {
                Valor[2][1] = PBC2.getValue(); //GUARDA EL VALOR DE LA BARRA
                Confianza[1] = Integer.parseInt(TF6.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBC2.setValue(Valor[2][1] - Confianza[1]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF9.equals("")) {
                Confianza[2] = 0;
            } else {
                Valor[2][2] = PBC3.getValue(); //GUARDA EL VALOR DE LA BARRA
                Confianza[2] = Integer.parseInt(TF9.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBC3.setValue(Valor[2][2] - Confianza[2]); //SE ENVIA EL NUEVO VALOR 
            }
            if (TF12.equals("")) {
                Confianza[3] = 0;
            } else {
                Valor[2][3] = PBC4.getValue(); //GUARDA EL VALOR DE LA BARRA
                Confianza[3] = Integer.parseInt(TF12.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBC4.setValue(Valor[2][3] - Confianza[3]); //SE ENVIA EL NUEVO VALOR 
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Deben ser numeros enteros");
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //SOLUCION DEL PROBLEMA DE BARRAS
        /* int Vida = jProgressBar1.getValue();
        int num;
        num = Integer.parseInt(TF.getText());
        jProgressBar1.setValue(Vida - num);*/
        Inventarios i = new Inventarios();
        i.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TF4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF4ActionPerformed

    private void TF7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF7ActionPerformed

    private void TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFActionPerformed

    private void TF10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF10ActionPerformed

    private void TFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF2.requestFocus();
            TF2.setBackground(Color.yellow);
            TF3.setBackground(Color.WHITE);
            TF.setBackground(Color.white);
        }
    }//GEN-LAST:event_TFKeyPressed

    private void TF2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF3.requestFocus();
            TF3.setBackground(Color.blue);
            TF2.setBackground(Color.WHITE);
            TF.setBackground(Color.white);
        }
    }//GEN-LAST:event_TF2KeyPressed

    private void TF3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF4.requestFocus();
            TF4.setBackground(Color.green);
            TF3.setBackground(Color.WHITE);
            TF.setBackground(Color.white);
        }
    }//GEN-LAST:event_TF3KeyPressed

    private void TF4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF5.requestFocus();
            TF5.setBackground(Color.yellow);
            TF4.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF4KeyPressed

    private void TF5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF5KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF6.requestFocus();
            TF6.setBackground(Color.blue);
            TF5.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF5KeyPressed

    private void TF6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF6KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF7.requestFocus();
            TF7.setBackground(Color.green);
            TF6.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF6KeyPressed

    private void TF7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF7KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF8.requestFocus();
            TF8.setBackground(Color.yellow);
            TF7.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF7KeyPressed

    private void TF8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF8KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF9.requestFocus();
            TF9.setBackground(Color.blue);
            TF8.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF8KeyPressed

    private void TF9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF9KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF10.requestFocus();
            TF10.setBackground(Color.green);
            TF9.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF9KeyPressed

    private void TF10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF10KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF11.requestFocus();
            TF11.setBackground(Color.yellow);
            TF10.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF10KeyPressed

    private void TF11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF11KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF12.requestFocus();
            TF12.setBackground(Color.blue);
            TF11.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF11KeyPressed

    private void TF12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF12KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TF.requestFocus();
            TF.setBackground(Color.green);
            TF12.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_TF12KeyPressed

    private void AguaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AguaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AguaActionPerformed

    private void AguaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AguaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Comida.requestFocus();
            Comida.setBackground(Color.green);
            Agua.setBackground(Color.WHITE);

        }
    }//GEN-LAST:event_AguaKeyPressed

    private void ComidaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ComidaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Combustible.requestFocus();
            Combustible.setBackground(Color.red);
            Comida.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_ComidaKeyPressed

    private void CombustibleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CombustibleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Medicina.requestFocus();
            Medicina.setBackground(Color.GRAY);
            Combustible.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_CombustibleKeyPressed

    private void MedicinaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MedicinaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Municion.requestFocus();
            Municion.setBackground(Color.yellow);
            Medicina.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_MedicinaKeyPressed

    private void MunicionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MunicionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Agua.requestFocus();
            Agua.setBackground(Color.blue);
            Medicina.setBackground(Color.WHITE);
            Municion.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_MunicionKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int Vida1[] = new int[5];
        int Valor1[] = new int[5];
        try {
            if (Agua.equals("")) {
                Vida1[0] = 0;
            } else {
                Valor1[0] = PbA.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida1[0] = Integer.parseInt(Agua.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PbA.setValue(Valor1[0] + Vida1[0]); //SE ENVIA EL NUEVO VALOR 
                Valor1[0] = PbA.getValue(); //GUARDA EL VALOR DE LA BARRA NUEVA
            }
            if (Comida.equals("")) {
                Vida1[1] = 0;
            } else {
                Valor1[1] = PbC.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida1[1] = Integer.parseInt(Comida.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PbC.setValue(Valor1[1] + Vida1[1]); //SE ENVIA EL NUEVO VALOR 
                Valor1[1] = PbC.getValue(); //GUARDA EL VALOR DE LA BARRA NUEVA
            }
            if (Combustible.equals("")) {
                Vida1[2] = 0;
            } else {
                Valor1[2] = PBCom.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida1[2] = Integer.parseInt(Combustible.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PBCom.setValue(Valor1[2] + Vida1[2]); //SE ENVIA EL NUEVO VALOR 
            }
            if (Medicina.equals("")) {
                Vida1[3] = 0;
            } else {
                Valor1[3] = PbME.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida1[3] = Integer.parseInt(Medicina.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PbME.setValue(Valor1[3] + Vida1[3]); //SE ENVIA EL NUEVO VALOR 
            }
            if (Municion.equals("")) {
                Vida1[4] = 0;
            } else {
                Valor1[4] = PbMU.getValue(); //GUARDA EL VALOR DE LA BARRA
                Vida1[4] = Integer.parseInt(Municion.getText()); //GUARGA EL VALOR DEL TEXTFIELD
                PbMU.setValue(Valor1[4] + Vida1[4]); //SE ENVIA EL NUEVO VALOR 
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Solo numeros enteros");
        }

        int dialbl = 0;
        int Resul = 0;
        int inicio = 0;
        int cont = 0;
        int muerte[] = new int[3];
        int resulA;
        int resulC;
        int resulM;

        if ((Valor1[0] != 0) && (Valor1[1] != 0)) {
            muerte[0] = 0;
            resulM = muerte[0];
            Muerte2.setText(Integer.toString(resulM));
        } else if (Valor1[0] != 0) {
            muerte[1] = 0;
            resulA = muerte[1];
            Muerte.setText(Integer.toString(resulA));
        } else if (Valor1[0] != 0) {
            muerte[2] = 0;
            resulA = muerte[2];
            Muerte.setText(Integer.toString(resulA));
        }

        if ((Valor1[0] == 0) && (Valor1[1] == 0)) {
            JOptionPane.showMessageDialog(null, "Deberian buscar agua y comida rapido");
            cont++;
            muerte[0] = Integer.parseInt(Muerte2.getText());
            resulM = muerte[0] + cont;
            Muerte2.setText(Integer.toString(resulM));
            JOptionPane.showMessageDialog(null, resulM);

            dialbl = Integer.parseInt(lbDias.getText());
            Resul = dialbl + 1;
            lbDias.setText(Integer.toString(Resul));

            if (resulM == 3) {
                JOptionPane.showMessageDialog(null, "Han muerte todos");
                JOptionPane.showMessageDialog(null, "Juego Terminado");
                System.exit(0);
            }
        } else if (Valor1[0] == 0) {
            JOptionPane.showMessageDialog(null, "Deberian buscar agua y rapido");
            cont++;
            muerte[1] = Integer.parseInt(Muerte.getText());
            resulA = muerte[1] + cont;
            Muerte.setText(Integer.toString(resulA));
            JOptionPane.showMessageDialog(null, resulA);

            dialbl = Integer.parseInt(lbDias.getText());
            Resul = dialbl + 1;
            lbDias.setText(Integer.toString(Resul));

            if (resulA == 5) {
                JOptionPane.showMessageDialog(null, "Han muerte todos de sed");
                JOptionPane.showMessageDialog(null, "Juego Terminado");
                System.exit(0);
            }
        } else if (Valor1[1] == 0) {
            JOptionPane.showMessageDialog(null, "Deberian buscar Comida rapido");
            cont++;
            muerte[2] = Integer.parseInt(Muerte1.getText());
            resulC = muerte[2] + cont;
            Muerte1.setText(Integer.toString(resulC));
            JOptionPane.showMessageDialog(null, resulC);

            dialbl = Integer.parseInt(lbDias.getText());
            Resul = dialbl + 1;
            lbDias.setText(Integer.toString(Resul));

            if (resulC == 7) {
                JOptionPane.showMessageDialog(null, "Han muerte todos de Hambre");
                JOptionPane.showMessageDialog(null, "Juego Terminado");
                System.exit(0);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int dado100 = 0; // 0-100
        String dadoR = "";
        dado100 = (int) (Math.random() * 101); //0 a 101 sin incluir el 101 
        dadoR = Integer.toString(dado100);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int dado3 = 0; // 0-3
        String dadoR = "";
        dado3 = (int) (Math.random() * 4); //0 a 4 excluido el 4
        dadoR = Integer.toString(dado3);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int dado2 = 0; // 0-1
        String dadoR = "";
        dado2 = (int) (Math.random() * 2); //0 a 2 excluido el 2
        dadoR = Integer.toString(dado2);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int dado2 = 0; // 1-2
        String dadoR = "";
        dado2 = (int) (Math.random() * 2) + 1; //1 a 2 
        dadoR = Integer.toString(dado2);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int dado8 = 0; // 0-8
        String dadoR = "";
        dado8 = (int) (Math.random() * 9); //0 a 9 sin incluir el 9 
        dadoR = Integer.toString(dado8);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int dado30 = 0; // 0-31
        String dadoR = "";
        dado30 = (int) (Math.random() * 31); //0 a 31 sin incluir el 31 
        dadoR = Integer.toString(dado30);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int dado5 = 0; // 1-5
        String dadoR = "";
        dado5 = (int) (Math.random() * 5) + 1; //1 a 5 
        dadoR = Integer.toString(dado5);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {
            int dias = Integer.parseInt(TFdias.getText());
            int personas = Integer.parseInt(TFper.getText());
            int valor[] = new int[2];
            valor[0] = PbA.getValue();
            PbA.setValue(valor[0] - (dias * personas));

            valor[1] = PbC.getValue();
            PbC.setValue(valor[1] - (dias * personas));

            int dia = Integer.parseInt(TFdias.getText());
            int dialbl = 0;
            int Resul = 0;

            dialbl = Integer.parseInt(lbDias.getText());
            Resul = dialbl + dia;
            lbDias.setText(Integer.toString(Resul));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Debes poner almenos un dia, para que transcurra el tiempo");
        }


    }//GEN-LAST:event_jButton11ActionPerformed

    private void TesorosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TesorosActionPerformed
        String[] Tesoros = new String[29];
    }//GEN-LAST:event_TesorosActionPerformed

    private void EventosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventosActionPerformed
        String Evento[] = new String[29]; //Eventos momentanios, por tiempo, hasta que salga carta que lo deshaga
        Evento[0] = "¡Calor extremo!, parece sequia pero solo es calor excesivo, Tu comunidad consumio muchos litros para rehidratarse (-50 de agua por persona)(Evento momentanea)";
        Evento[1] = "¡Sequia!, hace calor y es mas dificil conseguir agua por la sequia (-10 por dia)";
        Evento[2] = "¡Adios Sequia!, Las lluvias han vuelto, si habia sequia desparecera y te dara 40 de agua";
        Evento[3] = "¡Mala Racha!, No has conseguido nada de nada, Lanza el dado 100 para saber los dias de mala racha que han tenido";
        Evento[4] = "¡Bunker a la vista!, Has encontrado un bunker y vaya que habia cosas geniales, esto serviran por un tiempo, (50 comida)(50 agua)(100 balas)(100 Gasolina)(100 medicinas)";
        Evento[5] = "¡Guerra de pandillas!, Una pandilla/comunidad encontro su base y trato de apoderarse de ella, no lo lograron su objetivo pero perdimos mucha municion (-50 balas)";
        Evento[6] = "¡Supervivientes amistosos!, Te has topado a otra comunidad la cual no quiere problemas y lo unico que quiere es que le des paso sin problemas, has recivido algunos recursos para dejarlos pasar (20 comida)(10 agua)";
        Evento[7] = "¡Horda al ataque!, Una hora ataque la comundad y por desgracia se pierde gente y recursos (dados para el numero de personas muertas (depende del numero de personas de comunidad))(-200 balas)";
        Evento[8] = "¡Fiebre Negra!, Una peste esta matando gente rapidamente, Busca la cura con dado 2 (0 y 1 ) (-50 medicina por dia)";
        Evento[9] = "¡Lluvia Acida!, Quema mucho en la piel (-10 salud) y daño muchos a los cultivos (destruye cultivos) lanza dado de 2 (0 y 1) daña la mitad del cultivo y 0 daña todo";
        Evento[10] = "¡Tormenta de arena!, No te permite viajar lejos con tanta arena";
        Evento[11] = "¡Incendio Mortal!, Una persona de tu comunidad se quedo dormido y se genero un incendio y la comunidad trada de apagarlo, pierdes recursos (-30 comida) (5Agua*d30) (-30 medicina)";
        Evento[12] = "¡!";
        Evento[13] = "¡!";
        Evento[14] = "¡!";
        Evento[15] = "¡!";
        Evento[16] = "¡!";
        Evento[17] = "¡!";
        Evento[18] = "¡!";
        Evento[19] = "¡!";
        Evento[20] = "¡!";
        Evento[21] = "¡!";
        Evento[22] = "¡!";
        Evento[23] = "¡!";
        Evento[24] = "¡!";
        Evento[25] = "¡!";
        Evento[26] = "¡!";
        Evento[27] = "¡!";
        Evento[28] = "¡!";
        Evento[29] = "¡!";
    }//GEN-LAST:event_EventosActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Contador.setText(" ");
        cont = 0;
    }//GEN-LAST:event_jButton12ActionPerformed

    private void JbGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbGActionPerformed
        Connection con = null;
        ResultSet rs = null;
        try {

            con = getConecction();

            PS = con.prepareStatement("Insert into Recursos(Agua,Comida,Combustible,Medicina,Municion,id_Base) Values(?,?,?,?,?,?) ");

            PS.setInt(1, PbA.getValue());
            PS.setInt(2, PbC.getValue());
            PS.setInt(3, PBCom.getValue());
            PS.setInt(4, PbME.getValue());
            PS.setInt(5, PbMU.getValue());
            PS.setInt(6, Integer.parseInt(TfC.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
            } else {
                JOptionPane.showMessageDialog(null, "Error al Guardadar Personaje");
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        //PERSONAJE 1
        try {

            con = getConecction();

            PS = con.prepareStatement("Insert into SCC(Salud,Cordura,Confianza,id_Base,id_personaje) Values(?,?,?,?,?) ");

            PS.setInt(1, PBV1.getValue());
            PS.setInt(2, PBCor1.getValue());
            PS.setInt(3, PBC1.getValue());
            PS.setInt(4, Integer.parseInt(TfC.getText()));
            PS.setInt(5, Integer.parseInt(TfP1.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
            } else {
                JOptionPane.showMessageDialog(null, "Error al Guardadar Personaje");
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        //PERSONAJE 2
        try {
            String Comprobar = TfP2.getText();
            con = getConecction();
            if ("1000".equals(Comprobar)) {
                PS = con.prepareStatement("Insert into SCC(Salud,Cordura,Confianza,id_Base,id_perfalso) Values(?,?,?,?,?)");

                PS.setInt(1, PBV2.getValue());
                PS.setInt(2, PBCor2.getValue());
                PS.setInt(3, PBC2.getValue());
                PS.setInt(4, Integer.parseInt(TfC.getText()));
                PS.setInt(5, Integer.parseInt(TfP2.getText()));

                int Res = PS.executeUpdate();

                if (Res > 0) {
                }
            } else {
                //GUARDAR DATOS FALSOS

                PS = con.prepareStatement("Insert into SCC(Salud,Cordura,Confianza,id_Base,id_personaje) Values(?,?,?,?,?) ");

                PS.setInt(1, PBV2.getValue());
                PS.setInt(2, PBCor2.getValue());
                PS.setInt(3, PBC2.getValue());
                PS.setInt(4, Integer.parseInt(TfC.getText()));
                PS.setInt(5, Integer.parseInt(TfP2.getText()));

                int Res = PS.executeUpdate();

                if (Res > 0) {
                }
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        //PERSONAJE 3
        try {

            String Comprobar = TfP3.getText();
            con = getConecction();
            if ("1001".equals(Comprobar)) {
                PS = con.prepareStatement("Insert into SCC(Salud,Cordura,Confianza,id_Base,id_perfalso) Values(?,?,?,?,?)");

                PS.setInt(1, PBV3.getValue());
                PS.setInt(2, PBCor3.getValue());
                PS.setInt(3, PBC3.getValue());
                PS.setInt(4, Integer.parseInt(TfC.getText()));
                PS.setInt(5, Integer.parseInt(TfP3.getText()));

                int Res = PS.executeUpdate();

                if (Res > 0) {
                }
            } else {

                //GUARDAR DATOS FALSOS
                PS = con.prepareStatement("Insert into SCC(Salud,Cordura,Confianza,id_Base,id_personaje) Values(?,?,?,?,?) ");

                PS.setInt(1, PBV3.getValue());
                PS.setInt(2, PBCor3.getValue());
                PS.setInt(3, PBC3.getValue());
                PS.setInt(4, Integer.parseInt(TfC.getText()));
                PS.setInt(5, Integer.parseInt(TfP3.getText()));

                int Res = PS.executeUpdate();

                if (Res > 0) {
                }
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        // PERSONAJE 4
        try {
            String Comprobar = TfP4.getText();
            con = getConecction();
            if ("1002".equals(Comprobar)) {
                PS = con.prepareStatement("Insert into SCC(Salud,Cordura,Confianza,id_Base,id_perfalso) Values(?,?,?,?,?)");

                PS.setInt(1, PBV4.getValue());
                PS.setInt(2, PBCor4.getValue());
                PS.setInt(3, PBC4.getValue());
                PS.setInt(4, Integer.parseInt(TfC.getText()));
                PS.setInt(5, Integer.parseInt(TfP4.getText()));

                int Res = PS.executeUpdate();

                if (Res > 0) {
                }
            } else {
                //GUARDAR DATOS FALSOS

                PS = con.prepareStatement("Insert into SCC(Salud,Cordura,Confianza,id_Base,id_personaje) Values(?,?,?,?,?) ");

                PS.setInt(1, PBV4.getValue());
                PS.setInt(2, PBCor4.getValue());
                PS.setInt(3, PBC4.getValue());
                PS.setInt(4, Integer.parseInt(TfC.getText()));
                PS.setInt(5, Integer.parseInt(TfP4.getText()));
                
                int Res = PS.executeUpdate();

                if (Res > 0) {
                }
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        try {

            con = getConecction();

            PS = con.prepareStatement("Insert into base(id_base,num_Personas,num_dias) Values(?,?,?) ");

            PS.setInt(1, Integer.parseInt(TfC.getText()));
            PS.setInt(2, Integer.parseInt(TFper.getText()));
            PS.setInt(3, Integer.parseInt(lbDias.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
                JOptionPane.showMessageDialog(null, "Partida Guardada");
            } else {
                JOptionPane.showMessageDialog(null, "Error al Guardadar Personaje");
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_JbGActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Connection con = null;
        //RECURSOS
        try {

            con = getConecction();

            PS = con.prepareStatement("UPDATE Recursos SET Agua=?, Comida=?,"
                    + "Combustible=?,Medicina=?,Municion=? WHERE id_Base=?");

            PS.setInt(1, PbA.getValue());
            PS.setInt(2, PbC.getValue());
            PS.setInt(3, PBCom.getValue());
            PS.setInt(4, PbME.getValue());
            PS.setInt(5, PbMU.getValue());
            PS.setInt(6, Integer.parseInt(TfC.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
            } else {
                JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            JOptionPane.showMessageDialog(null, "Debe existir ya el Personaje y llenar todos los datos");
        }
        //PERSONAJES 1
        try {

            con = getConecction();

            PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                    + "Confianza = ?, id_personaje = ?  WHERE id_Personaje=?");

            PS.setInt(1, PBV1.getValue());
            PS.setInt(2, PBCor1.getValue());
            PS.setInt(3, PBC1.getValue());
            PS.setInt(4, Integer.parseInt(TfP21.getText()));
            PS.setInt(5, Integer.parseInt(TfP1.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
            } else {
                JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            JOptionPane.showMessageDialog(null, "Debe existir ya el Personaje y llenar todos los datos");
        }
        //PERSONAJES 2
        try {

            con = getConecction();

            PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                    + "Confianza = ?, id_personaje = ? WHERE id_Personaje=?");

            PS.setInt(1, PBV2.getValue());
            PS.setInt(2, PBCor2.getValue());
            PS.setInt(3, PBC2.getValue());
            PS.setInt(4, Integer.parseInt(TfP22.getText()));
            PS.setInt(5, Integer.parseInt(TfP2.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
            } else if (TfP22.equals("")) {
                PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                        + "Confianza = ?, id_perfalso = ? WHERE id_perFalso = 1000");

                PS.setInt(1, PBV2.getValue());
                PS.setInt(2, PBCor2.getValue());
                PS.setInt(3, PBC2.getValue());
                PS.setInt(4, Integer.parseInt(TfP2.getText()));

                if (Res > 0) {
                }
            } else {
                PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                        + "Confianza = ?, id_personaje = ? WHERE id_personaje = 1000");

                PS.setInt(1, PBV2.getValue());
                PS.setInt(2, PBCor2.getValue());
                PS.setInt(3, PBC2.getValue());
                PS.setInt(4, Integer.parseInt(TfP22.getText()));

                if (Res > 0) {
                }
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            JOptionPane.showMessageDialog(null, "Debe existir ya el Personaje y llenar todos los datos");
        }
        //PERSONAJES 3
        try {

            con = getConecction();

            PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                    + "Confianza = ?, id_personaje = ? WHERE id_Personaje=?");

            PS.setInt(1, PBV3.getValue());
            PS.setInt(2, PBCor3.getValue());
            PS.setInt(3, PBC3.getValue());
            PS.setInt(4, Integer.parseInt(TfP23.getText()));
            PS.setInt(5, Integer.parseInt(TfP3.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
            } else if (TfP23.equals("")) {

            } else {
                PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                        + "Confianza = ?, id_personaje = ? WHERE id_perFalso = 1001");

                PS.setInt(1, PBV3.getValue());
                PS.setInt(2, PBCor3.getValue());
                PS.setInt(3, PBC3.getValue());
                PS.setInt(4, Integer.parseInt(TfP23.getText()));

                if (Res > 0) {
                }
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            JOptionPane.showMessageDialog(null, "Debe existir ya el Personaje y llenar todos los datos");
        }
        //PERSONAJES 4
        try {

            con = getConecction();

            PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                    + "Confianza = ?, id_personaje = ? WHERE id_Personaje=?");

            PS.setInt(1, PBV4.getValue());
            PS.setInt(2, PBCor4.getValue());
            PS.setInt(3, PBC4.getValue());
            PS.setInt(4, Integer.parseInt(TfP24.getText()));
            PS.setInt(5, Integer.parseInt(TfP4.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
            } else if (TfP24.equals("")) {
                System.out.println("popo");
            } else {
                PS = con.prepareStatement("UPDATE SCC SET Salud=?, Cordura=?,"
                        + "Confianza = ?, id_personaje = ? WHERE id_perFalso = 1002");

                PS.setInt(1, PBV4.getValue());
                PS.setInt(2, PBCor4.getValue());
                PS.setInt(3, PBC4.getValue());
                PS.setInt(4, Integer.parseInt(TfP24.getText()));

                if (Res > 0) {
                }
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            JOptionPane.showMessageDialog(null, "Debe existir ya el Personaje y llenar todos los datos");
        }
        //BASE
        try {

            con = getConecction();

            PS = con.prepareStatement("UPDATE Base SET Num_Personas=?, Num_Dias=?"
                    + " WHERE id_Base=? ");

            PS.setInt(1, Integer.parseInt(TFper.getText()));
            PS.setInt(2, Integer.parseInt(lbDias.getText()));
            PS.setInt(3, Integer.parseInt(TfC.getText()));

            int Res = PS.executeUpdate();

            if (Res > 0) {
                JOptionPane.showMessageDialog(null, "Datos Actualizados");
            } else {
                JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            }

            con.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Error Datos No Actualizados");
            JOptionPane.showMessageDialog(null, "Debe existir ya el Personaje y llenar todos los datos");
        }

    }//GEN-LAST:event_jButton13ActionPerformed

    private void TfP24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TfP24ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TfP24ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        Connection con = null;
        ResultSet rs = null;
        int Datos[] = new int[12];
        try {
            con = getConecction();
            PS = con.prepareStatement("SELECT a.Agua, a.Comida, a.Combustible,"
                    + "a.Medicina, a.Municion from Recursos A where a.id_base = ?");
            PS.setString(1, TfC.getText());
            rs = PS.executeQuery();
            if (rs.next()) {

                PbA.setValue(rs.getInt("Agua"));
                PbC.setValue(rs.getInt("Comida"));
                PBCom.setValue(rs.getInt("Combustible"));
                PbME.setValue(rs.getInt("Medicina"));
                PbMU.setValue(rs.getInt("Municion"));

            } else {
                JOptionPane.showMessageDialog(null, "No existe un personaje con esa clave");
            }
        } catch (Exception e) {
            System.err.println(e);
        }
        try {
            con = getConecction();
            PS = con.prepareStatement("SELECT c.num_Personas,c.num_dias "
                    + "from Base C where c.id_base = ?");
            PS.setString(1, TfC.getText());
            rs = PS.executeQuery();

            if (rs.next()) {

                TFper.setText(rs.getString("Num_Personas"));
                lbDias.setText(rs.getString("Num_Dias"));

            } else {
                JOptionPane.showMessageDialog(null, "No existe un personaje con esa clave");
            }
        } catch (Exception e) {
            System.err.println(e);
        }
        //PERSONAJE 1
        try {
            con = getConecction();
            PS = con.prepareStatement("SELECT b.salud, b.Cordura,b.Confianza,b.id_Personaje "
                    + "from SCC B where b.id_Personaje = ?");
            PS.setString(1, TfP1.getText());
            rs = PS.executeQuery();
            if (rs.next()) {
                //1
                PBV1.setValue(rs.getInt("salud"));
                PBCor1.setValue(rs.getInt("cordura"));
                PBC1.setValue(rs.getInt("confianza"));
                TfP21.setText(rs.getString("id_personaje"));

            } else {
                JOptionPane.showMessageDialog(null, "No existe un personaje con esa clave");
            }
        } catch (Exception e) {
            System.err.println(e);
        }
        //PERSONAJE 2
        try {
            con = getConecction();
            PS = con.prepareStatement("SELECT b.salud, b.Cordura,b.Confianza,b.id_Personaje "
                    + "from SCC B where b.id_Personaje = ?");
            PS.setString(1, TfP2.getText());
            rs = PS.executeQuery();
            if (rs.next()) {
                //2
                PBV2.setValue(rs.getInt("salud"));
                PBCor2.setValue(rs.getInt("cordura"));
                PBC2.setValue(rs.getInt("confianza"));
                TfP22.setText(rs.getString("id_personaje"));

            } else {
                //CARGAR PERSONAJE FALSO
                PS = con.prepareStatement("SELECT salud, Cordura, Confianza, id_perFalso "
                        + "from Per_Falso where id_perFalso = 1000");
                rs = PS.executeQuery();
                if (rs.next()) {
                    //2
                    PBV2.setValue(rs.getInt("salud"));
                    PBCor2.setValue(rs.getInt("cordura"));
                    PBC2.setValue(rs.getInt("confianza"));
                    TfP2.setText(rs.getString("id_perFalso"));
                }
            }
        } catch (Exception e) {
            System.err.println(e);
        }
        //PERSONAJE 3
        try {
            con = getConecction();
            PS = con.prepareStatement("SELECT b.salud, b.Cordura,b.Confianza,b.id_Personaje "
                    + "from SCC B where b.id_Personaje = ?");
            PS.setString(1, TfP3.getText());
            rs = PS.executeQuery();
            if (rs.next()) {
                //3
                PBV3.setValue(rs.getInt("salud"));
                PBCor3.setValue(rs.getInt("cordura"));
                PBC3.setValue(rs.getInt("confianza"));
                TfP23.setText(rs.getString("id_personaje"));

            } else {
                //CARGAR PERSONAJE FALSO
                PS = con.prepareStatement("SELECT b.salud, b.Cordura,b.Confianza,b.id_perFalso "
                        + "from Per_Falso B where b.id_perFalso = 1001");
                rs = PS.executeQuery();
                if (rs.next()) {
                    //3
                    PBV3.setValue(rs.getInt("salud"));
                    PBCor3.setValue(rs.getInt("cordura"));
                    PBC3.setValue(rs.getInt("confianza"));
                    TfP3.setText(rs.getString("id_perFalso"));
                }
            }
        } catch (Exception e) {
            System.err.println(e);
        }
        //PERSONAJE 4
        try {
            con = getConecction();
            PS = con.prepareStatement("SELECT b.salud, b.Cordura,b.Confianza,b.id_Personaje "
                    + "from SCC B where b.id_Personaje = ?");
            PS.setString(1, TfP4.getText());
            rs = PS.executeQuery();
            if (rs.next()) {
                //4
                PBV4.setValue(rs.getInt("salud"));
                PBCor4.setValue(rs.getInt("cordura"));
                PBC4.setValue(rs.getInt("confianza"));
                TfP24.setText(rs.getString("id_personaje"));

            } else {
                //CARGAR PERSONAJE FALSO
                PS = con.prepareStatement("SELECT b.salud, b.Cordura,b.Confianza,b.id_perFalso "
                        + "from Per_Falso B where b.id_perFalso = 1002");
                rs = PS.executeQuery();
                if (rs.next()) {
                    //4
                    PBV4.setValue(rs.getInt("salud"));
                    PBCor4.setValue(rs.getInt("cordura"));
                    PBC4.setValue(rs.getInt("confianza"));
                    TfP4.setText(rs.getString("id_perFalso"));

                }
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        int dado100 = 0; // 0-50
        String dadoR = "";
        dado100 = (int) (Math.random() * 51); //0 a 51 sin incluir el 101 
        dadoR = Integer.toString(dado100);
        lbl.setText(dadoR);
        cont = cont + 1;
        Contador.setText(Integer.toString(cont));
    }//GEN-LAST:event_jButton15ActionPerformed

    private void JBcombateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcombateActionPerformed
JOptionPane.showMessageDialog(null, "Esta parte esta en Prueba muy pronto completa en la version 1.Gb.2");
    Combates C =  new Combates();
    C.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_JBcombateActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Juego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Agua;
    private javax.swing.JTextField Combustible;
    private javax.swing.JTextField Comida;
    private javax.swing.JLabel Contador;
    private javax.swing.JButton Eventos;
    private javax.swing.JLabel Fondo;
    private javax.swing.JButton JBcombate;
    private javax.swing.JTable JT;
    private javax.swing.JTable JT2;
    private javax.swing.JButton JbG;
    private javax.swing.JTextField Medicina;
    private javax.swing.JLabel Muerte;
    private javax.swing.JLabel Muerte1;
    private javax.swing.JLabel Muerte2;
    private javax.swing.JTextField Municion;
    private javax.swing.JProgressBar PBC1;
    private javax.swing.JProgressBar PBC2;
    private javax.swing.JProgressBar PBC3;
    private javax.swing.JProgressBar PBC4;
    private javax.swing.JProgressBar PBCom;
    private javax.swing.JProgressBar PBCor1;
    private javax.swing.JProgressBar PBCor2;
    private javax.swing.JProgressBar PBCor3;
    private javax.swing.JProgressBar PBCor4;
    private javax.swing.JProgressBar PBV1;
    private javax.swing.JProgressBar PBV2;
    private javax.swing.JProgressBar PBV3;
    private javax.swing.JProgressBar PBV4;
    private javax.swing.JProgressBar PbA;
    private javax.swing.JProgressBar PbC;
    private javax.swing.JProgressBar PbME;
    private javax.swing.JProgressBar PbMU;
    private javax.swing.JTextField TF;
    private javax.swing.JTextField TF10;
    private javax.swing.JTextField TF11;
    private javax.swing.JTextField TF12;
    private javax.swing.JTextField TF2;
    private javax.swing.JTextField TF3;
    private javax.swing.JTextField TF4;
    private javax.swing.JTextField TF5;
    private javax.swing.JTextField TF6;
    private javax.swing.JTextField TF7;
    private javax.swing.JTextField TF8;
    private javax.swing.JTextField TF9;
    private javax.swing.JTextField TFdias;
    private javax.swing.JTextField TFper;
    private javax.swing.JButton Tesoros;
    private javax.swing.JTextField TfC;
    private javax.swing.JTextField TfP1;
    private javax.swing.JTextField TfP2;
    private javax.swing.JTextField TfP21;
    private javax.swing.JTextField TfP22;
    private javax.swing.JTextField TfP23;
    private javax.swing.JTextField TfP24;
    private javax.swing.JTextField TfP3;
    private javax.swing.JTextField TfP4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbDias;
    private javax.swing.JLabel lbl;
    // End of variables declaration//GEN-END:variables
}
